--// üí¨ Credit: ChatGPT
--// üåà Smooth Rainbow Credit + Outline + Hide Battlepass GUI (runtime)
--// üê± reworked by ChatGPT (rainbow + safe nil checks + cleaner code)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LP = Players.LocalPlayer
local PlayerGui = LP:WaitForChild("PlayerGui")

----------------------------------------------------------------------
-- üëë CONFIG ZONE
----------------------------------------------------------------------

local DISPLAY_TEXT = "Credit by ‡∏•‡∏∏‡∏á‡∏≠‡∏≤‡∏£‡πå‡∏°" 
-- üëÜ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏ä‡∏ß‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏≠ (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ)

local Y_OFFSET_PX = 8 - 2
-- ‡πÄ‡∏ò‡∏≠‡∏ö‡∏≠‡∏Å "‡∏Ç‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏≠‡∏µ‡∏Å‡∏ã‡∏±‡∏Å 2 ‡∏´‡∏ô‡πà‡∏ß‡∏¢" ‡∏´‡∏ô‡∏π‡πÄ‡∏•‡∏¢‡∏Ç‡∏¢‡∏±‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô (-2 px)

local RAINBOW_UPDATE = 0.03 -- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á
local OUTLINE_OFFSET = 2    -- ‡∏£‡∏∞‡∏¢‡∏∞‡∏Ç‡∏≠‡∏ö‡∏î‡∏≥‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ (px)

----------------------------------------------------------------------
-- üñº ‡∏™‡∏£‡πâ‡∏≤‡∏á ScreenGui ‡∏´‡∏•‡∏±‡∏Å
----------------------------------------------------------------------

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "‡∏°‡∏≤‡∏î‡∏π‡πÄ‡∏´‡∏µ‡πâ‡∏¢‡∏≠‡∏∞‡πÑ‡∏£"
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

----------------------------------------------------------------------
-- üî° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel (‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏ö)
----------------------------------------------------------------------

local function createTextLabel(props)
	local lbl = Instance.new("TextLabel")
	lbl.Name = props.Name or "Label"
	lbl.Parent = props.Parent
	lbl.AnchorPoint = Vector2.new(0.5, 0)
	lbl.Position = UDim2.new(0.5, props.OffsetX or 0, 0, (props.OffsetY or 0))
	lbl.Size = UDim2.new(0, 240, 0, 40)
	lbl.BackgroundTransparency = 1
	lbl.Font = Enum.Font.GothamBold
	lbl.TextScaled = true
	lbl.Text = props.Text or ""
	lbl.TextColor3 = props.Color or Color3.new(1,1,1)
	lbl.TextTransparency = 0
	lbl.TextStrokeTransparency = 1 -- ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ó‡∏≥ outline manual ‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
	return lbl
end

----------------------------------------------------------------------
-- üñ§ ‡∏™‡∏£‡πâ‡∏≤‡∏á outline 8 ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
----------------------------------------------------------------------

local outlineFolder = Instance.new("Folder")
outlineFolder.Name = "OutlineFolder"
outlineFolder.Parent = ScreenGui

local outlineOffsets = {
	Vector2.new(-1,  0), Vector2.new(1, 0),
	Vector2.new( 0, -1), Vector2.new(0, 1),
	Vector2.new(-1, -1), Vector2.new(-1, 1),
	Vector2.new( 1, -1), Vector2.new(1, 1)
}

for i, dir in ipairs(outlineOffsets) do
	createTextLabel({
		Name = "Outline_"..i,
		Parent = outlineFolder,
		Text = DISPLAY_TEXT,
		Color = Color3.fromRGB(0,0,0),
		OffsetX = dir.X * OUTLINE_OFFSET,
		OffsetY = Y_OFFSET_PX + dir.Y * OUTLINE_OFFSET,
	})
end

----------------------------------------------------------------------
-- üåà ‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å (‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á‡∏ß‡∏¥‡∏ö‡∏ß‡∏±‡∏ö)
----------------------------------------------------------------------

local mainText = createTextLabel({
	Name = "MainText",
	Parent = ScreenGui,
	Text = DISPLAY_TEXT,
	Color = Color3.fromRGB(255,255,255),
	OffsetX = 0,
	OffsetY = Y_OFFSET_PX,
})

-- Gradient ‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á
local gradient = Instance.new("UIGradient")
gradient.Rotation = 0
gradient.Parent = mainText

-- palette ‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
local rainbowColors = {
	Color3.fromRGB(255,   0,   0),   -- ‡πÅ‡∏î‡∏á
	Color3.fromRGB(255, 128,   0),   -- ‡∏™‡πâ‡∏°
	Color3.fromRGB(255, 255,   0),   -- ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
	Color3.fromRGB(  0, 255,   0),   -- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
	Color3.fromRGB(  0, 128, 255),   -- ‡∏ü‡πâ‡∏≤
	Color3.fromRGB(128,   0, 255),   -- ‡∏°‡πà‡∏ß‡∏á
	Color3.fromRGB(255,   0, 255),   -- ‡∏ä‡∏°‡∏û‡∏π
}

local function buildColorSequence(tbl)
	local seq = {}
	local lastIndex = #tbl - 1
	if lastIndex < 1 then
		-- ‡∏Å‡∏±‡∏ô‡∏û‡∏±‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
		return ColorSequence.new({
			ColorSequenceKeypoint.new(0, tbl[1] or Color3.new(1,1,1)),
			ColorSequenceKeypoint.new(1, tbl[1] or Color3.new(1,1,1)),
		})
	end

	for i, c in ipairs(tbl) do
		local t = (i-1)/lastIndex
		seq[#seq+1] = ColorSequenceKeypoint.new(t, c)
	end
	return ColorSequence.new(seq)
end

gradient.Color = buildColorSequence(rainbowColors)

-- ‡∏•‡∏π‡∏õ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï gradient ‡πÉ‡∏´‡πâ‡πÑ‡∏´‡∏•‡∏ã‡πâ‡∏≤‡∏¢‚Üí‡∏Ç‡∏ß‡∏≤‡πÅ‡∏ö‡∏ö barber pole
task.spawn(function()
	while true do
		task.wait(RAINBOW_UPDATE)
		-- ‡∏¢‡πâ‡∏≤‡∏¢‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡πÑ‡∏õ‡∏ó‡πâ‡∏≤‡∏¢ = ‡∏™‡πÑ‡∏•‡∏î‡πå‡∏û‡∏≤‡πÄ‡∏•‡∏ï
		local first = table.remove(rainbowColors, 1)
		table.insert(rainbowColors, first)
		gradient.Color = buildColorSequence(rainbowColors)
	end
end)

----------------------------------------------------------------------
-- üôà ‡∏ã‡πà‡∏≠‡∏ô Battlepass GUI runtime ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
-- ‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: force .Visible = false ‡∏ï‡∏•‡∏≠‡∏î ‡∏ñ‡πâ‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏î‡πâ‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏Å‡πá‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà
----------------------------------------------------------------------

-- helper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏≤ descendant ‡πÅ‡∏ö‡∏ö chain ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
local function deepFind(root, pathArray)
	local current = root
	for _, name in ipairs(pathArray) do
		if not current then return nil end
		current = current:FindFirstChild(name)
	end
	return current
end

local targetPath = {
	"Menu",
	"Views",
	"Battlepass",
	"ViewPass",
	"Center",
	"ViewPass",
	"Unlocked"
}

RunService.RenderStepped:Connect(function()
	-- ‡∏ã‡πà‡∏≠‡∏ô Battlepass unlock panel
	local unlocked = deepFind(PlayerGui, targetPath)
	if unlocked and unlocked.Visible == true then
		unlocked.Visible = false
	end
end)
